<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>neptunedreams.com</groupId>
  <artifactId>skeleton</artifactId>
  <version>0.2-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>skeleton</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <!--<dependency>-->
      <!--<groupId>junit</groupId>-->
      <!--<artifactId>junit</artifactId>-->
      <!--<version>3.8.1</version>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->

    <!-- https://mvnrepository.com/artifact/org.apache.derby/derby -->
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.14.1.0</version>
    </dependency>

    <!--&lt;!&ndash; https://mvnrepository.com/artifact/javax.persistence/persistence-api &ndash;&gt;-->
    <!--<dependency>-->
      <!--<groupId>javax.persistence</groupId>-->
      <!--<artifactId>persistence-api</artifactId>-->
      <!--<version>1.0.2</version>-->
    <!--</dependency>-->

    <!-- https://mvnrepository.com/artifact/org.jetbrains/annotations -->
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>13.0</version>
    </dependency>
    
    <!--jOOQ-->
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>3.10.0</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta</artifactId>
      <version>3.10.0</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
      <version>3.10.0</version>
    </dependency>  </dependencies>
  
  <build>
    <plugins>
      <!--This is the standard Maven plugin-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
        <version>3.7.0</version>
      </plugin>
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-surefire-plugin</artifactId>-->
        <!--<version>2.5</version>-->
        <!--<configuration>-->
          <!--<systemPropertyVariables>-->
            <!--<derby.system.home>${user.home}/.skeleton}</derby.system.home>-->
            <!--<buildDirectory>${project.build.directory}</buildDirectory>-->
          <!--</systemPropertyVariables>-->
        <!--</configuration>-->
      <!--</plugin>-->

      <!--This packs all the classes into a single jar-->
      <!--<plugin>-->
        <!--<artifactId>maven-assembly-plugin</artifactId>-->
        <!--<configuration>-->
          <!--<archive>-->
            <!--<manifest>-->
              <!--<mainClass>com.neptunedreams.skeleton.Skeleton</mainClass>-->
            <!--</manifest>-->
          <!--</archive>-->
          <!--<descriptorRefs>-->
            <!--<descriptorRef>jar-with-dependencies</descriptorRef>-->
          <!--</descriptorRefs>-->
          <!--&lt;!&ndash;This remove the "with-dependencies" from the name, so it ends with ".jar"&ndash;&gt;-->
          <!--<appendAssemblyId>false</appendAssemblyId>-->
        <!--</configuration>-->
      <!--</plugin>-->

      <!--I don't remember what this does. I may not need it. But it make assist the assembly plugin-->
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-dependency-plugin</artifactId>-->
        <!--<executions>-->
          <!--<execution>-->
            <!--<id>copy-dependencies</id>-->
            <!--<phase>prepare-package</phase>-->
            <!--<goals>-->
              <!--<goal>copy-dependencies</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
              <!--<outputDirectory>-->
                <!--${project.build.directory}/libs-->
              <!--</outputDirectory>-->
            <!--</configuration>-->
          <!--</execution>-->
        <!--</executions>-->
      <!--</plugin>-->

      <!--This creates an executable jar file.-->
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-jar-plugin</artifactId>-->
        <!--<version>2.6</version>-->
        <!--<configuration>-->
          <!--<detail>-->
            <!--<derby.system.home>${user.home}/.skeleton</derby.system.home>-->
          <!--</detail>-->
          <!--<archive>-->
            <!--<manifest>-->
              <!--<mainClass>com.neptunedreams.skeleton.Skeleton</mainClass>-->
            <!--</manifest>-->
          <!--</archive>-->
        <!--</configuration>-->
      <!--</plugin>-->
      
      <!--This one will bundle everything into a Mac Application bundle, I hope.-->
      <plugin>
        <!-- https://github.com/federkasten/appbundle-maven-plugin -->
        <groupId>sh.tak.appbundler</groupId>
        <artifactId>appbundle-maven-plugin</artifactId>
        <version>1.2.0</version>
        <configuration>
          <!--Put your custom Info.plist and Icon.icns under your maven resource paths (src/main/resources on default configuration).-->
          <mainClass>com.neptunedreams.skeleton.Skeleton</mainClass>
          <!--<dictionaryFile>YourCustomInfo.plist</dictionaryFile>-->
          <iconFile>Earth_Neptune.icns</iconFile>
          <jrePath>/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk</jrePath>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--This is the jooq code generation plugin-->
      <plugin>

        <!-- Specify the maven code generator plugin -->
        <!-- Use org.jooq            for the Open Source Edition
								 org.jooq.pro        for commercial editions, 
								 org.jooq.pro-java-6 for commercial editions with Java 6 support,
								 org.jooq.trial      for the free trial edition 
							 
						 Note: Only the Open Source Edition is hosted on Maven Central. 
									 Import the others manually from your distribution -->
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>3.10.0</version>

        <!-- The plugin should hook into the generate goal -->
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>

        <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
        <dependencies>
          <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.14.1.0</version>
          </dependency>
        </dependencies>

        <!-- Specify the plugin configuration.
						 The configuration format is the same as for the standalone code generator -->
        <configuration>

          <!-- JDBC connection parameters -->
          <jdbc>
            <driver>org.apache.derby.jdbc.EmbeddedDriver</driver>
            <url>jdbc:derby:skeleton2;create=true;collation=TERRITORY_BASED:PRIMARY</url>
            <!--<user>postgres</user>-->
            <!--<password>test</password>-->
          </jdbc>

          <!-- Generator parameters -->
          <generator>
            <database>
              <name>org.jooq.util.derby.DerbyDatabase</name>
              <includes>.*</includes>
              <excludes></excludes>
              <!-- In case your database supports catalogs, e.g. SQL Server:
							<inputCatalog>public</inputCatalog>
								-->
              <inputSchema>skeleton</inputSchema>
              <!--<inputSchema>public</inputSchema>-->
            </database>
            <target>
              <packageName>com.neptunedreams.skeleton.data2</packageName>
              <directory>/Users/miguelmunoz/Documents/Skeleton2/src/main/java</directory>
            </target>
          </generator>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>